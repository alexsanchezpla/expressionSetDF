% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expressionSetDF.R
\name{expressionSetDF}
\alias{expressionSetDF}
\alias{exprs.eDF}
\alias{phenoData.eDF}
\alias{featureData.eDF}
\alias{[.expressionSetDF}
\title{Constructor para expressionSetDF}
\usage{
expressionSetDF(exprs = data.frame(), phenoData = NULL, featureData = NULL)

exprs.eDF(object)

phenoData.eDF(object)

featureData.eDF(object)

\method{[}{expressionSetDF}(x, i, j, drop = FALSE, ...)
}
\arguments{
\item{exprs}{Data frame con datos de expresión genética.}

\item{phenoData}{Data frame con información fenotípica (opcional).}

\item{featureData}{Data frame con información de características (opcional).}

\item{object}{Un objeto de clase expressionSetDF.}

\item{x}{Un objeto de clase expressionSetDF.}

\item{i}{Índices o condiciones de filas.}

\item{j}{Índices o condiciones de columnas.}

\item{drop}{Indica si se deben eliminar las dimensiones no utilizadas.}
}
\value{
Un objeto de clase expressionSetDF.

Un data frame con datos de expresión genética.

Un data frame con información fenotípica.

Un data frame con información de características.

Un nuevo objeto de clase expressionSetDF.
}
\description{
Constructor para expressionSetDF

Método para acceder al campo "exprs"

Método para acceder al campo "phenoData"

Método para acceder al campo "featureData"

Método para realizar subsetting
}
\examples{
datos <- data.frame(A = c(1, 2, 3, 7), B = c(4, 5, 6, 0),
            C=c("C", "C", "T", "T"))
sampleNames <- c("S1", "S2", "S3", "S4")
varNames <- c("G1", "G2", "Group")
rownames(datos) <- sampleNames
colnames(datos) <- varNames
phenoDat <-  data.frame(sampleGrp = c(rep("H", 2), rep("A", 2)))
rownames(phenoDat) <- rownames(datos)
featureDat <- data.frame(varGrp= c(rep("c", 2), "n"))
rownames(featureDat) <- colnames(datos)
es_df0 <- expressionSetDF(exprs = datos,
                       phenoData = NULL,
                       featureData = NULL)
es_df <- expressionSetDF(exprs = datos,
                      phenoData = phenoDat,
                      featureData = featureDat)
exprs.eDF(es_df)

phenoData.eDF(es_df)

featureData.eDF(es_df)

es_colset <- es_df[1:2,]
es_rowset <- es_df[,1:2]

}
